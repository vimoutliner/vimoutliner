Installing and Testing VimOutliner


    Automatic Method                |vo-auto-install|
    Updating                        |vo-updating|
    Manual Method                   |vo-manual-install|
    Testing                         |vo-testing|


Automatic Method

The automatic installation targets Unix-compatible platforms:

From tar archive

    $ tar xzvf vimoutliner-0.4.0.tar.gz
    $ cd vimoutliner
    $ sh install.sh

From zip archive 

    $ unzip vimoutliner-0.4.0.zip
    $ cd vimoutliner-0.4.0
    $ sh install.sh 

Installing with pathogen:

If you have pathogen installed as your package manager you can clone the git repository in your
pathogen directory:
        $ cd ~/.vim/bundle && git clone https://github.com/vimoutliner/vimoutliner.git

Installing using install.sh:

First you can decide whether to install the VimOutliner files or abort
the process leaving everything unchanged. Assuming you have confirmed the
installation, the install script creates the necessary directory tree and
copies the files which provide the core functionality and documentation.

With the second question you decide whether you want to install some
brand new add-ons, currently implementing checkboxes, tags and smart
paste as enabled, as well as several useful external scripts in the
vimoutliner/scripts folder. There are also several more useful plugins
that you can enable by uncommenting them in your vimoutlinerrc file.

Manual Method

You can also copy the files from the unpacked distribution tarball into their
destination folders by yourself. The following steps are a description of what
has to go where and assume some knowledge of your vim setup.

If you encounter problems, please contact the mailing list for an immediate
solution and more complete future documentation: https://groups.google.com/forum/#!forum/vimoutliner.


If you want to setup VimOutliner on a system running Microsoft Windows, the
directory $HOME denotes the base folder of the vim installation.  If you're on
Unix based system, $HOME is as usual.

You need the following sub trees in your $HOME directory:

    $HOME/.vim/
        doc/
        ftdetect/
        ftplugin/
        syntax/
        vimoutliner/
            plugins/
            scripts/

The distribution tarball unpacks into a directory vimoutliner with the
following contents:

    vimoutliner/
        plugins/             (1)
        scripts/             (1)
    doc/                     (1)
    ftdetect/                (1)
    ftplugin/                (1)
    install.sh*
    syntax/                  (1)
    syntax/                  (1)
    vimoutlinerrc            (1)

(1) The content of these folders should be copied to their namesakes in the
$HOME/.vim folder

Your $HOME/.vimrc file should contain the lines

     filetype plugin indent on
     syntax on

Finally, you need to integrate the online help provided with VimOutliner into
the vim help system.  Start vim and execute the following command:

    :helptags $HOME/.vim/doc

At this point, VimOutliner should be functional.  Type ":help vo" to get
started. To get a quick overview of all VimOutliner commands you can view the 
cheatsheet with ":help votl_cheatsheet". 

Testing Base Functionality

Create a text file and save it as a .otl file like vo_test.otl. Enter
some text and verify the following:
- Tabs indent the text
- Different indent levels are different colors
- Lines starting with a colon and space word-wrap

Lines starting with colons are body text. They should word wrap and
should be a special color (typically green, but it can vary). Verify
that paragraphs of body text can be reformatted with the Vim gq
commands.

You can test the different VimOutliner commands by looking at the
examples in the cheatsheet. "help votl_cheatsheet". To get the comma
commands working, uncomment this line in your vimoutlinerrc file:
    let maplocalleader = ',,'
                               

Debian Installation

Debian does include VimOutliner as a package. However some Debian versions
require this line to be added to your .vimrc file:

    syntax on


