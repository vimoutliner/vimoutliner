Outline Calendar 1.3
	What's new
		in 1.3
			vimrc-script by Lee Bigelow for easy calendar access
			small modifications to this outline
			update from 1.2.2
				edit tagfile path in outline_calendar/vimrc
				add 'source .../outline_calendar/vimrc' to your ~/.vimrc
		in 1.2.2
			changed personal _tag_ set definition
				: it may appear anywhere, but takes only next space-delimited
				: word into account. The advantage is that I can set a tag
				: behind a calendar date and jump to the current week via
				: _tag_kalender
		in 1.2.1
			removed spurious underscores in td function
		in 1.2
			use ~/.vimoutlinerrc to avoid tagfile collisions
			,,d-dates usable as links into calendar
			calendar dates (almost) without syntactic noise
			update to documentation
		in 1.1
			we are almost vo_maketags.pl-compatible again
			you can use vo_calendar_shelf.otl to attach your calendar shelf to your outline tree
			files follow vimoutliner naming convention
			all installation files are kept within one directory
			minor refinements to console user interface
			defaults and samples are in English now
	Prerequisites
		ruby
			used for generating the skeleton calendar and the shelf
			could be replaced by perl, awk, python, ...
			maybe even by a shell script or a small forth program ;-)
		bash
			use of special variable expansion in shell-frontend
		ctags
			create the tags-file for interoutline links and calendar access
			regex support necessary
			$ ctags --version
				: Exuberant Ctags 5.5.1, Copyright (C) 1996-2003 Darren Hiebert
				: Compiled: Aug 15 2003, 21:06:30
				: Addresses: <dhiebert@users.sourceforge.net>, http://ctags.sourceforge.net
				: Optional compiled features: +wildcards, +regex
		vimoutliner
			you should already have it
	Known incompatibilities
		none
	Installation and Configuration
		Installation
			I recommend keeping all Outlines in one directory
				it's easier on ctags
			move the distribution folder there
				: $ mv outline_calendar ~/Outlines
			add another tag file to vim's lookup table
				the following line should go into $HOME/.vimrc
					: source ~/Outlines/outline_calendar/vimrc
			configure the various scripts (see below)
			source vo_calendar_ui.sh into your shell
				$HOME/.bashrc is probably a good place for this
				something like the following should do it
					$ . $HOME/Outlines/outline_calendar/vo_calendar_ui.sh
			you're ready to run
				try
					$ calgen 2005 2006 2007
						: you get three yearly calendars plus a shelf to
						: access them through _tag_xxx linking
					$ tagvout
						: this should create a tag file inside the outline
						: calendar directory
					$ td
						: now vimoutliner should be positioned on today
					$ vim
						in normal mode type \tS
							enter a date after the prompt and hit return
							the calendar should open in a new window
		Configure the calendar layout in vo_calendar_generator.rb
			Month layout
				with MONTHINDENT=1
					2006
						January
							_2006-01-01_ Sun
							_2006-01-02_ Mon
				or with MONTHINDENT=0
					January 2006
						_2006-01-01_ Sun
						_2006-01-02_ Mon
			Optional diary headings for each day
				with DIARY=[]
					_2006-01-01_ Sun
					_2006-01-02_ Mon
				with DIARY=["Todo", "Billing", "Personal notes"]
					_2006-01-01_ Sun
						Todo
						Billing
						Personal notes
					_2006-01-02_ Mon
						Todo
						Billing
						Personal notes
			change the language of the calendar
				DAYNAMES 
					names of weekdays starting with Sunday
				MONTHNAMES
					names of months
			calendar skeletons
				need not be generated with the ruby script
				but we do have an "API" to keep things compatible
					: I suggest an approach that can be executed in
					: the same way as my ruby script. If you did it
					: with perl, you could call the script
					: vo_calendar_generator.pl.
					: Its first command line parameter should be the
					: directory, where the calendar files are stored,
					: the remaining parameters denote the years, for which
					: calendar skeletons should be generated.
			calendar shelf
				do not edit manually, a really stupid parser (tm) is reading this
					: it contains the _tag_ format links into the various
					: yearly calendars. It is "parsed" (if you can call it
					: that) to insert a newly created calendar in the correct
					: position. 
		Configure the directory layout in vo_calendar_ui.sh
			See the comments there for further explanations
			Ideally you only have to set the variable OUTLINES, but YMMV
		Configure tag harvesting in vo_calendar_ctags.conf
			it should not need any changes
				if it does, "man 1 ctags" is your friend
			what it does, line by line
				define a new language called outline
				outline handling rules are applied only to .otl files
				recognise headings starting with "_tag_ set "
					everything after "_tag_ set " is considered as tag content
						: this provides an alternative way of defining tags
						: for both interoutline and intraoutline jumps.
						: It can safely be removed without harming the
						: outline calendar.
						: If you keep it, your non-calendar tags will be
						: stored in the calendar tagfile, too, but this should
						: not be a problem.
				recognise headings starting with a yyyy_mm_dd date
					Underscore as date separator
						are distinct from ,,d dates
							date stamps will not be jumped to
							date stamps will only be jumped from
						they are mangled to hyphens as tag marker
						plain ,,d dates can be used to enter the calendar from anywhere
						all dates typed by you are in ISO-format yyyy-mm-dd
				only tag outline files
				handle files in subdirectories, too
				show some impressive statistics
	Usage
		administrative
			once: install and configure (see above)
			rarely: generate a new calendar
				$ calgen 2005 2006 2007
					this will go a long way
			often: refresh the tag file
				$ tagvout
					you might even want to put it in your crontab
					don't rely on shell functions there, use plain commands
						modulo local changes the crontab entry would look like this:
							: */10 * * * * /usr/bin/ctags -f $HOME/.vimoutliner/vo_tags.tag --options=$HOME/Outlines/outline_calendar/vo_calendar_ctags.conf $HOME/Outlines &> /dev/null
						refresh tag file every 10 minutes
						remove the configuration line --totals, you won't need it there
		open calendar from running shell
			edit today's calendar entries
				$ td
					: vimoutliner should open on today
					: if you're running X, you'll get a gvim, otherwise a vim
					: you'll be on today's entry
				move around, add some items to the outline
				move cursor on a ISO-format date yyyy-mm-dd and <C-k> it
			edit any available day
				$ td 2005-05-04
					: release day
		open calendar from running vim session
			mappings for normal mode
				\td and \tD
					jump to today
				\tc and \tC
					jump to the date at the cursor position
				\ts and \tS
					ask for date to jump to
				Notes
					the mappings are defined as <leader>t...
					the uppercase variant opens a new window within the current session
	Author(s)
		(c) Stefan Schmiedl <s@xss.de> 2005-05-04
		Contributors:
			Lee Bigelow brought the \t? functions into existence
	License
		thou shalt neither sue nor blame me
			it's worth what you paid for it
		thou can do whatever else thou want to do with it
			just remember to have fun on the way
